{"ast":null,"code":"var _jsxFileName = \"/Users/lendified/Desktop/react-form-component/src/containers/FormContainer.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-select/dist/css/bootstrap-select.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport $ from 'jquery/dist/jquery';\nimport 'bootstrap-select/dist/js/bootstrap-select.min.js';\nimport Input from '../components/Input';\nimport Select from '../components/Select';\nimport SubmitButton from '../components/SubmitButton';\nimport SliderRange from '../components/SliderRange';\nimport Logo from '../components/Logo';\n\nclass FormContainer extends Component {\n  componentDidMount() {\n    $('select').selectpicker();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      businessOptions: [{\n        title: 'Advertising & Promotion',\n        value: 0\n      }, {\n        title: 'Bill Payment/Supplier Payment',\n        value: 1\n      }, {\n        title: 'Equipment',\n        value: 2\n      }, {\n        title: 'Hiring',\n        value: 3\n      }, {\n        title: 'Inventory/Sourcing',\n        value: 4\n      }],\n      genderOptions: [{\n        title: 'Male',\n        value: 0\n      }, {\n        title: 'Female',\n        value: 1\n      }],\n      valueSlider: 'Please write an essay about your favorite DOM element.'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      valueSlider: event.target.value\n    });\n  }\n\n  sendInfo(e) {\n    //e.preventDefault();\n    console.log('Name ' + document.getElementsByName(\"name\")[0].value);\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    alert('Hello Hacker! Info has been sent...');\n  }\n\n  changeValue() {\n    document.getElementById(\"myRange\").oninput = function () {\n      var slider = document.getElementById(\"myRange\");\n      var output = document.getElementById(\"myMoney\");\n      output.innerHTML = slider.value; // Display the default slider value\n      // Update the current slider value (each time you drag the slider handle)\n\n      slider.oninput = function () {\n        output.innerHTML = \"$&nbsp;\" + formatMoney(this.value);\n      };\n\n      slider.onchange = function () {\n        output.innerHTML = \"$&nbsp;\" + formatMoney(this.value);\n      };\n\n      function formatMoney(amount, decimalCount = 0, decimal = \".\", thousands = \".\") {\n        try {\n          decimalCount = Math.abs(decimalCount);\n          decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n          const negativeSign = amount < 0 ? \"-\" : \"\";\n          let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n          let j = i.length > 3 ? i.length % 3 : 0;\n          return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      ;\n    };\n\n    window.setTimeout(function () {\n      $(\"#myRange\").prop(\"value\", \"5500\");\n    }, 5000);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      autoComplete: \"off\",\n      className: \"form\",\n      id: \"form\",\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container py-3 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-xl-4 card-special\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-outline-secondary border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body pt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      alt: \"Lendified Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"text\",\n      title: \"Full Name\",\n      name: \"name\",\n      placeholder: \"Enter your Name\",\n      icon: \"fa fa-user-o form-icon\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"email\",\n      title: \"Address\",\n      name: \"address\",\n      placeholder: \"Enter your Address\",\n      icon: \"fa fa-envelope-o form-icon\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Select, {\n      title: \"Business\",\n      name: \"business\",\n      placeholder: \"Select Business\",\n      options: this.state.businessOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Select, {\n      title: \"Gender\",\n      name: \"gender\",\n      placeholder: \"Select Gender\",\n      options: this.state.genderOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(SliderRange, {\n      name: \"myRange\",\n      title: \"Amount\",\n      idRange: \"myRange\",\n      inputtype: \"range\",\n      min: 500,\n      max: 15000,\n      step: 500,\n      action: this.changeValue,\n      defaultValue: 1500,\n      displayValue: \"$ 1.500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      name: \"Connect\",\n      idName: \"submit\",\n      inputtype: \"submit\",\n      action: this.sendInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/Users/lendified/Desktop/react-form-component/src/containers/FormContainer.jsx"],"names":["React","Component","$","Input","Select","SubmitButton","SliderRange","Logo","FormContainer","componentDidMount","selectpicker","constructor","props","state","businessOptions","title","value","genderOptions","valueSlider","handleChange","bind","event","setState","target","sendInfo","e","console","log","document","getElementsByName","submitForm","preventDefault","alert","changeValue","getElementById","oninput","slider","output","innerHTML","formatMoney","onchange","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","window","setTimeout","prop","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,sCAAP;AACA,OAAO,oDAAP;AACA,OAAO,oCAAP;AAEA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAO,kDAAP;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAClCQ,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,CAAC,CAAC,QAAD,CAAD,CAAYQ,YAAZ;AACH;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,CAAC;AAACC,QAAAA,KAAK,EAAC,yBAAP;AAAkCC,QAAAA,KAAK,EAAC;AAAxC,OAAD,EAA4C;AAACD,QAAAA,KAAK,EAAC,+BAAP;AAAuCC,QAAAA,KAAK,EAAC;AAA7C,OAA5C,EAA4F;AAACD,QAAAA,KAAK,EAAC,WAAP;AAAmBC,QAAAA,KAAK,EAAC;AAAzB,OAA5F,EAAwH;AAACD,QAAAA,KAAK,EAAC,QAAP;AAAgBC,QAAAA,KAAK,EAAC;AAAtB,OAAxH,EAAiJ;AAACD,QAAAA,KAAK,EAAC,oBAAP;AAA4BC,QAAAA,KAAK,EAAC;AAAlC,OAAjJ,CADR;AAETC,MAAAA,aAAa,EAAE,CAAC;AAACF,QAAAA,KAAK,EAAC,MAAP;AAAgBC,QAAAA,KAAK,EAAC;AAAtB,OAAD,EAA0B;AAACD,QAAAA,KAAK,EAAC,QAAP;AAAkBC,QAAAA,KAAK,EAAC;AAAxB,OAA1B,CAFN;AAGTE,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,WAAW,EAAEG,KAAK,CAACE,MAAN,CAAaP;AAA3B,KAAd;AACH;;AAEDQ,EAAAA,QAAQ,CAACC,CAAD,EAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAASC,QAAQ,CAACC,iBAAT,CAA2B,MAA3B,EAAmC,CAAnC,EAAsCb,KAA3D;AACH;;AACDc,EAAAA,UAAU,CAACL,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACM,cAAF;AACAC,IAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;;AACDC,EAAAA,WAAW,GAAG;AACVL,IAAAA,QAAQ,CAACM,cAAT,CAAwB,SAAxB,EAAmCC,OAAnC,GAA8C,YAAU;AACpD,UAAIC,MAAM,GAAGR,QAAQ,CAACM,cAAT,CAAwB,SAAxB,CAAb;AACA,UAAIG,MAAM,GAAGT,QAAQ,CAACM,cAAT,CAAwB,SAAxB,CAAb;AACAG,MAAAA,MAAM,CAACC,SAAP,GAAmBF,MAAM,CAACpB,KAA1B,CAHoD,CAGnB;AAEjC;;AACAoB,MAAAA,MAAM,CAACD,OAAP,GAAiB,YAAW;AAC1BE,QAAAA,MAAM,CAACC,SAAP,GAAmB,YAAUC,WAAW,CAAC,KAAKvB,KAAN,CAAxC;AACD,OAFD;;AAGAoB,MAAAA,MAAM,CAACI,QAAP,GAAkB,YAAW;AACzBH,QAAAA,MAAM,CAACC,SAAP,GAAmB,YAAUC,WAAW,CAAC,KAAKvB,KAAN,CAAxC;AACH,OAFD;;AAIA,eAASuB,WAAT,CAAqBE,MAArB,EAA6BC,YAAY,GAAG,CAA5C,EAA+CC,OAAO,GAAG,GAAzD,EAA8DC,SAAS,GAAG,GAA1E,EAA+E;AAC7E,YAAI;AACFF,UAAAA,YAAY,GAAGG,IAAI,CAACC,GAAL,CAASJ,YAAT,CAAf;AACAA,UAAAA,YAAY,GAAGK,KAAK,CAACL,YAAD,CAAL,GAAsB,CAAtB,GAA0BA,YAAzC;AACA,gBAAMM,YAAY,GAAGP,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,EAAxC;AACA,cAAIQ,CAAC,GAAGC,QAAQ,CAACT,MAAM,GAAGI,IAAI,CAACC,GAAL,CAASK,MAAM,CAACV,MAAD,CAAN,IAAkB,CAA3B,EAA8BW,OAA9B,CAAsCV,YAAtC,CAAV,CAAR,CAAuEW,QAAvE,EAAR;AACA,cAAIC,CAAC,GAAIL,CAAC,CAACM,MAAF,GAAW,CAAZ,GAAiBN,CAAC,CAACM,MAAF,GAAW,CAA5B,GAAgC,CAAxC;AACA,iBAAOP,YAAY,IAAIM,CAAC,GAAGL,CAAC,CAACO,MAAF,CAAS,CAAT,EAAYF,CAAZ,IAAiBV,SAApB,GAAgC,EAArC,CAAZ,GAAuDK,CAAC,CAACO,MAAF,CAASF,CAAT,EAAYG,OAAZ,CAAoB,gBAApB,EAAsC,OAAOb,SAA7C,CAAvD,IAAkHF,YAAY,GAAGC,OAAO,GAAGE,IAAI,CAACC,GAAL,CAASL,MAAM,GAAGQ,CAAlB,EAAqBG,OAArB,CAA6BV,YAA7B,EAA2CgB,KAA3C,CAAiD,CAAjD,CAAb,GAAmE,EAAjM,CAAP;AACD,SAPD,CAOE,OAAOjC,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAAA;AACJ,KAzBD;;AA0BAkC,IAAAA,MAAM,CAACC,UAAP,CAAkB,YAAU;AACxB1D,MAAAA,CAAC,CAAC,UAAD,CAAD,CAAc2D,IAAd,CAAmB,OAAnB,EAA4B,MAA5B;AACH,KAFD,EAEE,IAFF;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAA0C,MAAA,EAAE,EAAC,MAA7C;AAAoD,MAAA,QAAQ,EAAE,KAAKhC,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKX,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAE,IAAF;AACI,MAAA,GAAG,EAAE,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAMI,oBAAE,KAAF;AACI,MAAA,SAAS,EAAE,MADf;AAEI,MAAA,KAAK,EAAE,WAFX;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,WAAW,EAAE,iBAJjB;AAKI,MAAA,IAAI,EAAE,wBALV;AAMI,MAAA,QAAQ,EAAE,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAcI,oBAAE,KAAF;AACI,MAAA,SAAS,EAAE,OADf;AAEI,MAAA,KAAK,EAAE,SAFX;AAGI,MAAA,IAAI,EAAE,SAHV;AAII,MAAA,WAAW,EAAE,oBAJjB;AAKI,MAAA,IAAI,EAAE,4BALV;AAMI,MAAA,QAAQ,EAAE,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAsBI,oBAAE,MAAF;AACI,MAAA,KAAK,EAAE,UADX;AAEI,MAAA,IAAI,EAAE,UAFV;AAGI,MAAA,WAAW,EAAE,iBAHjB;AAII,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,eAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EA4BI,oBAAE,MAAF;AACI,MAAA,KAAK,EAAE,QADX;AAEI,MAAA,IAAI,EAAE,QAFV;AAGI,MAAA,WAAW,EAAE,eAHjB;AAII,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,aAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,EAkCI,oBAAE,WAAF;AACI,MAAA,IAAI,EAAE,SADV;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,OAAO,EAAE,SAHb;AAII,MAAA,SAAS,EAAE,OAJf;AAKI,MAAA,GAAG,EAAE,GALT;AAMI,MAAA,GAAG,EAAE,KANT;AAOI,MAAA,IAAI,EAAE,GAPV;AAQI,MAAA,MAAM,EAAE,KAAKgB,WARjB;AASI,MAAA,YAAY,EAAE,IATlB;AAUI,MAAA,YAAY,EAAE,SAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCJ,EA8CI,oBAAE,YAAF;AACI,MAAA,IAAI,EAAE,SADV;AAEI,MAAA,MAAM,EAAE,QAFZ;AAGI,MAAA,SAAS,EAAE,QAHf;AAII,MAAA,MAAM,EAAE,KAAKT,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAiEH;;AA3HiC;;AA6HtC,eAAehB,aAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-select/dist/css/bootstrap-select.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\nimport $ from 'jquery/dist/jquery';\nimport 'bootstrap-select/dist/js/bootstrap-select.min.js';\n\nimport Input from '../components/Input'\nimport Select from '../components/Select'\nimport SubmitButton from '../components/SubmitButton'\nimport SliderRange from '../components/SliderRange';\nimport Logo from '../components/Logo';\n\nclass FormContainer extends Component {\n    componentDidMount(){\n        $('select').selectpicker();\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            businessOptions: [{title:'Advertising & Promotion', value:0},{title:'Bill Payment/Supplier Payment',value:1},{title:'Equipment',value:2},{title:'Hiring',value:3},{title:'Inventory/Sourcing',value:4}],\n            genderOptions: [{title:'Male' , value:0},{title:'Female' , value:1}],\n            valueSlider: 'Please write an essay about your favorite DOM element.'\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({valueSlider: event.target.value});\n    }\n   \n    sendInfo(e){\n        //e.preventDefault();\n        console.log('Name '+ document.getElementsByName(\"name\")[0].value);\n    }\n    submitForm(e){\n        e.preventDefault();\n        alert('Hello Hacker! Info has been sent...');\n    }\n    changeValue() {\n        document.getElementById(\"myRange\").oninput  = function(){\n            var slider = document.getElementById(\"myRange\");\n            var output = document.getElementById(\"myMoney\");\n            output.innerHTML = slider.value; // Display the default slider value\n          \n            // Update the current slider value (each time you drag the slider handle)\n            slider.oninput = function() {\n              output.innerHTML = \"$&nbsp;\"+formatMoney(this.value);\n            } \n            slider.onchange = function() {\n                output.innerHTML = \"$&nbsp;\"+formatMoney(this.value);\n            }\n\n            function formatMoney(amount, decimalCount = 0, decimal = \".\", thousands = \".\") {\n              try {\n                decimalCount = Math.abs(decimalCount);\n                decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n                const negativeSign = amount < 0 ? \"-\" : \"\";\n                let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n                let j = (i.length > 3) ? i.length % 3 : 0;\n                return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n              } catch (e) {\n                console.log(e)\n              }\n            };\n        };\n        window.setTimeout(function(){\n            $(\"#myRange\").prop(\"value\", \"5500\");\n        },5000);\n    }\n    render() {\n        return (\n            <form autoComplete=\"off\" className=\"form\" id=\"form\" onSubmit={this.submitForm}>\n                <div className=\"container py-3 mt-3\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-xs-12 col-xl-4 card-special\">\n                            <div className=\"card card-outline-secondary border-0\">\n                                <div className=\"card-body pt-0\">\n                                    <input type=\"text\" onChange={this.handleChange} />\n                                    \n                                    < Logo \n                                        alt={\"Lendified Logo\"}\n                                    />\n                                    < Input \n                                        inputtype={\"text\"}\n                                        title={\"Full Name\"}\n                                        name={\"name\"}\n                                        placeholder={\"Enter your Name\"}\n                                        icon={\"fa fa-user-o form-icon\"}\n                                        required={\"required\"}\n                                    />\n                                    < Input \n                                        inputtype={\"email\"}\n                                        title={\"Address\"}\n                                        name={\"address\"}\n                                        placeholder={\"Enter your Address\"}\n                                        icon={\"fa fa-envelope-o form-icon\"}\n                                        required={\"required\"}\n                                    />\n                                    < Select \n                                        title={\"Business\"}\n                                        name={\"business\"}\n                                        placeholder={\"Select Business\"}\n                                        options={this.state.businessOptions}\n                                    />\n                                    < Select \n                                        title={\"Gender\"}\n                                        name={\"gender\"}\n                                        placeholder={\"Select Gender\"}\n                                        options={this.state.genderOptions}\n                                    />\n                                    < SliderRange \n                                        name={\"myRange\"}\n                                        title=\"Amount\"\n                                        idRange={\"myRange\"}\n                                        inputtype={\"range\"}\n                                        min={500}\n                                        max={15000}\n                                        step={500}\n                                        action={this.changeValue}\n                                        defaultValue={1500}\n                                        displayValue={\"$ 1.500\"}\n                                    />\n                                    < SubmitButton \n                                        name={\"Connect\"}\n                                        idName={\"submit\"}\n                                        inputtype={\"submit\"}\n                                        action={this.sendInfo}\n                                    />\n                                </div>\n                            </div>  \n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}